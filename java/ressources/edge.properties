# questions to be discussed.
## Routers: done
## Asymetric network: done (we agreed on)
## Static component: why do we need cpu/memory/...
## Latence w.r.t to the rest of the world (i.e. where should you put the first service that does not have any latency constraint
## in/out components.

# The number of edge sites
# Default: 5
sites.number = 5

# The number of hosts per each site.
# Default: 5
sites.hostsnumberpersite = {5, 3, 3, 3, 2}

# The mode of host for each site
# Default : 1
sites.hostsmodelpersite = {1, 2, 1, 2, 3}

# Host models: {Core nb, CPU units, RAM, netin, netout}
# RAM, netin/netout are in MB
host.models = \
              {2, 100, 4096, 1250, 1250},\
              {4, 100, 16192, 1250, 1250},\
              {8, 100, 32768, 1250, 1250}

# Links between sites (we do not consider the network between the edge site
#(we expect that it has been deployed in order to satisfy needs of the hosts

# Each line corresponds to one site, the value gives the bw/latency to other edge site (-1 means infinite, -2 there is no direct connections).
# Please note values are given for both netin and netout, e.g: {1250,10} means 1250MB in net in / 1250MB net out with 10ms in latency

network.toplogy = \
             {-1,0}, {1250,10}, {-2,0}, {-2,0}, {-2,0},\
             {1250,10}, {-1,0}, {1250,80}, {1250,120}, {-2,0}\
             {-2,0}, {1250,80}, {-1,0}, {-2,0}, {-2,0},\
             {-2,0}, {1250,120}, {-2,0}, {-1,0}, {1250,20},\
             {-2,0}, {-2,0}, {-2,0}, {1250,20}, {-1,0}

# Nb of services that need to be deployed.
services.number = 3

# Each line describes how the service is composed in terms of components

services.components = \
                      { {web1, 40, 1024, -1} },\
                      { {web2, 40, 1024, -1}, {DB2, 80, 4096, -1}, {Cam2, 5} },\
                      { {web3, 40, 1024, -1}, {DB3-a, 40, 4096, -1}, {DB3-b, 40, 4096, -1}, {Cam3-a, 5}, {Cam3-b, 4} }

# maybe it should be given as netin, netout, latency constraints
# Question: how I express the BW from the external world and the latency to the user (if critical)?

services.topologies = { {-1, -1, -1} },\
                      { {-1, -1, -1}, {40, 700, 20} }

  #TODO : Trouver un moyen propre de presenter la matrice par service (i.e. avec trois '{')

